{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sibongile\\\\Documents\\\\sibongile\\\\2024\\\\projects\\\\portfolio\\\\APIs\\\\travel_ease\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  height: \"70vh\",\n  width: \"100%\"\n};\nfunction Map({\n  setCoordinates,\n  setBounds,\n  coordinates\n}) {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyBCL1EwLHgn8s3qXIk-rTVtr3DW3P8ZHR4\" // Replace with your actual API key\n  });\n  const [map, setMap] = useState(null);\n  const onLoad = useCallback(map => {\n    setMap(map);\n  }, []);\n  const onUnmount = useCallback(() => {\n    setMap(null);\n  }, []);\n  const handleBoundsChanged = () => {\n    if (map) {\n      const bounds = map.getBounds();\n      if (bounds) {\n        const ne = bounds.getNorthEast();\n        const sw = bounds.getSouthWest();\n        const newBounds = {\n          ne: {\n            lat: ne.lat(),\n            lng: ne.lng()\n          },\n          sw: {\n            lat: sw.lat(),\n            lng: sw.lng()\n          }\n        };\n        setBounds(prevBounds => {\n          if ((prevBounds === null || prevBounds === void 0 ? void 0 : prevBounds.ne.lat) !== newBounds.ne.lat || (prevBounds === null || prevBounds === void 0 ? void 0 : prevBounds.ne.lng) !== newBounds.ne.lng || (prevBounds === null || prevBounds === void 0 ? void 0 : prevBounds.sw.lat) !== newBounds.sw.lat || (prevBounds === null || prevBounds === void 0 ? void 0 : prevBounds.sw.lng) !== newBounds.sw.lng) {\n            console.log(\"Bounds:\", newBounds);\n            return newBounds;\n          }\n          return prevBounds;\n        });\n      }\n    }\n  };\n  const handleCenterChanged = () => {\n    if (map) {\n      const newCenter = map.getCenter();\n      if (newCenter) {\n        const newCoordinates = {\n          lat: newCenter.lat(),\n          lng: newCenter.lng()\n        };\n        setCoordinates(prevCoordinates => {\n          if (prevCoordinates.lat !== newCoordinates.lat || prevCoordinates.lng !== newCoordinates.lng) {\n            console.log(\"Center:\", newCoordinates);\n            return newCoordinates;\n          }\n          return prevCoordinates;\n        });\n      }\n    }\n  };\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: coordinates,\n    zoom: 15,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    onCenterChanged: handleCenterChanged,\n    onBoundsChanged: handleBoundsChanged,\n    children: /*#__PURE__*/_jsxDEV(Marker, {\n      position: coordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Map, \"sc/DS85Udqb0HC94DVNruSImuio=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\nvar _c, _c2;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","GoogleMap","useJsApiLoader","Marker","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","height","width","Map","setCoordinates","setBounds","coordinates","_s","isLoaded","id","googleMapsApiKey","map","setMap","onLoad","onUnmount","handleBoundsChanged","bounds","getBounds","ne","getNorthEast","sw","getSouthWest","newBounds","lat","lng","prevBounds","console","log","handleCenterChanged","newCenter","getCenter","newCoordinates","prevCoordinates","mapContainerStyle","center","zoom","onCenterChanged","onBoundsChanged","children","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/Sibongile/Documents/sibongile/2024/projects/portfolio/APIs/travel_ease/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\n\nconst containerStyle = {\n  height: \"70vh\",\n  width: \"100%\",\n};\n\nfunction Map({ setCoordinates, setBounds, coordinates }) {\n  const { isLoaded } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyBCL1EwLHgn8s3qXIk-rTVtr3DW3P8ZHR4\", // Replace with your actual API key\n  });\n\n  const [map, setMap] = useState(null);\n\n  const onLoad = useCallback((map) => {\n    setMap(map);\n  }, []);\n\n  const onUnmount = useCallback(() => {\n    setMap(null);\n  }, []);\n\n  const handleBoundsChanged = () => {\n    if (map) {\n      const bounds = map.getBounds();\n      if (bounds) {\n        const ne = bounds.getNorthEast();\n        const sw = bounds.getSouthWest();\n        const newBounds = {\n          ne: { lat: ne.lat(), lng: ne.lng() },\n          sw: { lat: sw.lat(), lng: sw.lng() },\n        };\n        setBounds((prevBounds) => {\n          if (\n            prevBounds?.ne.lat !== newBounds.ne.lat ||\n            prevBounds?.ne.lng !== newBounds.ne.lng ||\n            prevBounds?.sw.lat !== newBounds.sw.lat ||\n            prevBounds?.sw.lng !== newBounds.sw.lng\n          ) {\n            console.log(\"Bounds:\", newBounds);\n            return newBounds;\n          }\n          return prevBounds;\n        });\n      }\n    }\n  };\n\n  const handleCenterChanged = () => {\n    if (map) {\n      const newCenter = map.getCenter();\n      if (newCenter) {\n        const newCoordinates = { lat: newCenter.lat(), lng: newCenter.lng() };\n        setCoordinates((prevCoordinates) => {\n          if (\n            prevCoordinates.lat !== newCoordinates.lat ||\n            prevCoordinates.lng !== newCoordinates.lng\n          ) {\n            console.log(\"Center:\", newCoordinates);\n            return newCoordinates;\n          }\n          return prevCoordinates;\n        });\n      }\n    }\n  };\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={coordinates}\n      zoom={15}\n      onLoad={onLoad}\n      onUnmount={onUnmount}\n      onCenterChanged={handleCenterChanged}\n      onBoundsChanged={handleBoundsChanged}\n    >\n      <Marker position={coordinates} />\n    </GoogleMap>\n  ) : (\n    <></>\n  );\n}\n\nexport default React.memo(Map);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}