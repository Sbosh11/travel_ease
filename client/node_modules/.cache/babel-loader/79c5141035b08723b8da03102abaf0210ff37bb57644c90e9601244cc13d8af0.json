{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sibongile\\\\Documents\\\\sibongile\\\\2024\\\\projects\\\\portfolio\\\\APIs\\\\travel_ease\\\\src\\\\components\\\\Map\\\\Map.jsx\",\n  _s = $RefreshSig$();\n// Map.js\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  height: \"70vh\"\n};\nfunction Map({\n  setCoordinates,\n  setBounds,\n  coordinates\n}) {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyBCL1EwLHgn8s3qXIk-rTVtr3DW3P8ZHR4\" // Replace with your actual API key\n  });\n  const [map, setMap] = useState(null);\n  const [initialCenter, setInitialCenter] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const onUnmount = useCallback(() => {\n    setMap(null);\n  }, []);\n  const handleBoundsChanged = () => {\n    if (map) {\n      const bounds = map.getBounds();\n      const ne = bounds.getNorthEast();\n      const sw = bounds.getSouthWest();\n      const newBounds = {\n        ne: {\n          lat: ne.lat(),\n          lng: ne.lng()\n        },\n        sw: {\n          lat: sw.lat(),\n          lng: sw.lng()\n        }\n      };\n      setBounds(newBounds);\n      // console.log(\"Bounds:\", newBounds);\n    }\n  };\n  const handleCenterChanged = () => {\n    if (map) {\n      const newCenter = map.getCenter();\n      const newCoordinates = {\n        lat: newCenter.lat(),\n        lng: newCenter.lng()\n      };\n      setCoordinates(newCoordinates);\n      console.log(\"Center:\", newCoordinates);\n    }\n  };\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: initialCenter,\n    zoom: 15,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    onCenterChanged: handleCenterChanged,\n    onBoundsChanged: handleBoundsChanged,\n    children: /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: initialCenter.lat,\n        lng: initialCenter.lng\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Map, \"CJnLw8JVTfWQ8YtrKJy6NBQNN+I=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\nvar _c, _c2;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","GoogleMap","useJsApiLoader","Marker","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","height","Map","setCoordinates","setBounds","coordinates","_s","isLoaded","id","googleMapsApiKey","map","setMap","initialCenter","setInitialCenter","lat","lng","onUnmount","handleBoundsChanged","bounds","getBounds","ne","getNorthEast","sw","getSouthWest","newBounds","handleCenterChanged","newCenter","getCenter","newCoordinates","console","log","mapContainerStyle","center","zoom","onLoad","onCenterChanged","onBoundsChanged","children","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/Sibongile/Documents/sibongile/2024/projects/portfolio/APIs/travel_ease/src/components/Map/Map.jsx"],"sourcesContent":["// Map.js\r\nimport React, { useState, useCallback, useEffect } from \"react\";\r\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\r\n\r\nconst containerStyle = {\r\n  height: \"70vh\",\r\n};\r\n\r\nfunction Map({ setCoordinates, setBounds, coordinates }) {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: \"AIzaSyBCL1EwLHgn8s3qXIk-rTVtr3DW3P8ZHR4\", // Replace with your actual API key\r\n  });\r\n\r\n  const [map, setMap] = useState(null);\r\n  const [initialCenter, setInitialCenter] = useState({\r\n    lat: 0,\r\n    lng: 0,\r\n  });\r\n\r\n\r\n\r\n  const onUnmount = useCallback(() => {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  const handleBoundsChanged = () => {\r\n    if (map) {\r\n      const bounds = map.getBounds();\r\n      const ne = bounds.getNorthEast();\r\n      const sw = bounds.getSouthWest();\r\n      const newBounds = {\r\n        ne: { lat: ne.lat(), lng: ne.lng() },\r\n        sw: { lat: sw.lat(), lng: sw.lng() },\r\n      };\r\n      setBounds(newBounds);\r\n      // console.log(\"Bounds:\", newBounds);\r\n    }\r\n  };\r\n\r\n  const handleCenterChanged = () => {\r\n    if (map) {\r\n      const newCenter = map.getCenter();\r\n      const newCoordinates = { lat: newCenter.lat(), lng: newCenter.lng() };\r\n      setCoordinates(newCoordinates);\r\n      console.log(\"Center:\", newCoordinates);\r\n    }\r\n  };\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={initialCenter}\r\n      zoom={15}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n      onCenterChanged={handleCenterChanged}\r\n      onBoundsChanged={handleBoundsChanged}\r\n    >\r\n      {/* Marker for the center */}\r\n      <Marker\r\n        position={{\r\n          lat: initialCenter.lat,\r\n          lng: initialCenter.lng,\r\n        }}\r\n      />\r\n    </GoogleMap>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default React.memo(Map);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}