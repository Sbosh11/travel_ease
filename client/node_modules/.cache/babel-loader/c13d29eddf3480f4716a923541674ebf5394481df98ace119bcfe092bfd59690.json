{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sibongile\\\\Documents\\\\sibongile\\\\2024\\\\projects\\\\portfolio\\\\APIs\\\\travel_ease\\\\src\\\\components\\\\Map\\\\Map.jsx\",\n  _s = $RefreshSig$();\n// Map.js\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  height: \"70vh\"\n};\nfunction Map(setCoordinates, setBounds, coordinates) {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyBCL1EwLHgn8s3qXIk-rTVtr3DW3P8ZHR4\"\n  });\n  const [map, setMap] = useState(null);\n  const [initialCenter, setInitialCenter] = useState({\n    lat: -26.196368068356826,\n    lng: 28.032628842080946\n  });\n  useEffect(() => {\n    // Set initial center to default coordinates\n    setInitialCenter({\n      lat: -26.196368068356826,\n      lng: 28.032628842080946\n    });\n\n    // Try to retrieve user's current location with high accuracy\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setInitialCenter({\n          lat: latitude,\n          lng: longitude\n        });\n      }, error => {\n        console.error(error);\n      }, {\n        enableHighAccuracy: true\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []); // This effect runs only once after the component mounts\n\n  const onLoad = useCallback(function callback(map) {\n    setMap(map);\n  }, []);\n  const onUnmount = useCallback(function callback() {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: initialCenter,\n    zoom: 15,\n    onChange: e => {\n      setCoordinates({\n        lat: e.center.lat,\n        lng: e.center.lng\n      });\n    },\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: initialCenter.lat,\n        lng: initialCenter.lng\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Map, \"+SY9vZ4r8sJo/j47LfPp2GU6DIs=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\nvar _c, _c2;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","GoogleMap","useJsApiLoader","Marker","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","height","Map","setCoordinates","setBounds","coordinates","_s","isLoaded","id","googleMapsApiKey","map","setMap","initialCenter","setInitialCenter","lat","lng","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","error","console","enableHighAccuracy","onLoad","callback","onUnmount","mapContainerStyle","center","zoom","onChange","e","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/Sibongile/Documents/sibongile/2024/projects/portfolio/APIs/travel_ease/src/components/Map/Map.jsx"],"sourcesContent":["// Map.js\r\nimport React, { useState, useCallback, useEffect } from \"react\";\r\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\r\n\r\nconst containerStyle = {\r\n  height: \"70vh\",\r\n};\r\n\r\nfunction Map(setCoordinates, setBounds, coordinates) {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: \"AIzaSyBCL1EwLHgn8s3qXIk-rTVtr3DW3P8ZHR4\",\r\n  });\r\n\r\n  const [map, setMap] = useState(null);\r\n  const [initialCenter, setInitialCenter] = useState({ lat: -26.196368068356826, lng: 28.032628842080946 });\r\n\r\n  useEffect(() => {\r\n    // Set initial center to default coordinates\r\n    setInitialCenter({ lat: -26.196368068356826, lng: 28.032628842080946 });\r\n\r\n    // Try to retrieve user's current location with high accuracy\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setInitialCenter({ lat: latitude, lng: longitude });\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        },\r\n        { enableHighAccuracy: true }\r\n      );\r\n    } else {\r\n      console.error(\"Geolocation is not supported by this browser.\");\r\n    }\r\n  }, []); // This effect runs only once after the component mounts\r\n\r\n  const onLoad = useCallback(function callback(map) {\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = useCallback(function callback() {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={initialCenter}\r\n      zoom={15}\r\n      onChange={(e) => {\r\n        setCoordinates({lat:e.center.lat,lng:e.center.lng})\r\n      }}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n    >\r\n      {/* Marker for the center */}\r\n      <Marker\r\n        position={{\r\n          lat: initialCenter.lat,\r\n          lng: initialCenter.lng,\r\n        }}\r\n      />\r\n    </GoogleMap>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default React.memo(Map);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}