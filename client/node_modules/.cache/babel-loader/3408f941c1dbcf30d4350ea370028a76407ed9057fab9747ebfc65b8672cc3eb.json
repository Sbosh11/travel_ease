{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sibongile\\\\Documents\\\\sibongile\\\\2024\\\\projects\\\\portfolio\\\\APIs\\\\travel_ease\\\\client\\\\src\\\\components\\\\Map\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker, OverlayView } from \"@react-google-maps/api\";\nimport RestaurantIcon from \"@mui/icons-material/Restaurant\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  height: \"70vh\",\n  // Adjust as needed\n  width: \"100%\"\n};\nconst getPixelPositionOffset = (offsetWidth, offsetHeight, labelAnchor) => {\n  return {\n    x: offsetWidth + labelAnchor.x,\n    y: offsetHeight + labelAnchor.y\n  };\n};\nfunction Map({\n  places\n}) {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"YOUR_API_KEY_HERE\" // Replace with your Google Maps API key\n  });\n  const [map, setMap] = useState(null);\n  const [coordinates, setCoordinates] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const onLoad = useCallback(map => {\n    setMap(map);\n  }, []);\n  const onUnmount = useCallback(() => {\n    setMap(null);\n  }, []);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setCoordinates({\n        lat: latitude,\n        lng: longitude\n      });\n      console.log(`User's location: ${latitude}, ${longitude}`);\n      fetchPlaces(latitude, longitude);\n    }, error => {\n      console.error(\"Error getting user's location: \", error);\n    });\n  }, []);\n  const fetchPlaces = async (lat, lng) => {\n    const URL = \"http://localhost:5000/places\"; // Adjust URL as needed\n    const radius = 500; // Static radius for fetching places, will be dynamic later\n\n    try {\n      const response = await fetch(`${URL}?lat=${lat}&lng=${lng}&radius=${radius}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Places data:\", data);\n      // Handle the places data, store it in state, etc.\n    } catch (error) {\n      console.error(\"Error fetching places:\", error);\n    }\n  };\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: coordinates,\n    zoom: 15 // Adjust zoom level as needed\n    ,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: [/*#__PURE__*/_jsxDEV(Marker, {\n      position: coordinates,\n      title: \"User's Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), places.map((place, index) => /*#__PURE__*/_jsxDEV(OverlayView, {\n      position: {\n        lat: Number(place.geometry.location.lat),\n        lng: Number(place.geometry.location.lng)\n      },\n      mapPaneName: OverlayView.OVERLAY_MOUSE_TARGET,\n      getPixelPositionOffset: (offsetWidth, offsetHeight) => getPixelPositionOffset(offsetWidth, offsetHeight, {\n        x: -30,\n        y: -15\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: `#203254`,\n          padding: `7px 12px`,\n          fontSize: \"11px\",\n          color: `white`,\n          borderRadius: \"4px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          width: \"max-content\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(RestaurantIcon, {\n          style: {\n            marginRight: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: place.rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Map, \"+QJMqg8maWrUbObiN9iM0q9xti8=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\nvar _c, _c2;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","GoogleMap","useJsApiLoader","Marker","OverlayView","RestaurantIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","height","width","getPixelPositionOffset","offsetWidth","offsetHeight","labelAnchor","x","y","Map","places","_s","isLoaded","id","googleMapsApiKey","map","setMap","coordinates","setCoordinates","lat","lng","onLoad","onUnmount","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","console","log","fetchPlaces","error","URL","radius","response","fetch","ok","Error","status","data","json","mapContainerStyle","center","zoom","children","title","fileName","_jsxFileName","lineNumber","columnNumber","place","index","Number","geometry","location","mapPaneName","OVERLAY_MOUSE_TARGET","style","background","padding","fontSize","color","borderRadius","display","alignItems","marginRight","rating","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/Sibongile/Documents/sibongile/2024/projects/portfolio/APIs/travel_ease/client/src/components/Map/Map.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useJsApiLoader,\r\n  Marker,\r\n  OverlayView,\r\n} from \"@react-google-maps/api\";\r\nimport RestaurantIcon from \"@mui/icons-material/Restaurant\";\r\n\r\nconst containerStyle = {\r\n  height: \"70vh\", // Adjust as needed\r\n  width: \"100%\",\r\n};\r\n\r\nconst getPixelPositionOffset = (offsetWidth, offsetHeight, labelAnchor) => {\r\n  return {\r\n    x: offsetWidth + labelAnchor.x,\r\n    y: offsetHeight + labelAnchor.y,\r\n  };\r\n};\r\n\r\nfunction Map({ places }) {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: \"YOUR_API_KEY_HERE\", // Replace with your Google Maps API key\r\n  });\r\n\r\n  const [map, setMap] = useState(null);\r\n  const [coordinates, setCoordinates] = useState({ lat: 0, lng: 0 });\r\n\r\n  const onLoad = useCallback((map) => {\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = useCallback(() => {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setCoordinates({ lat: latitude, lng: longitude });\r\n        console.log(`User's location: ${latitude}, ${longitude}`);\r\n\r\n        fetchPlaces(latitude, longitude);\r\n      },\r\n      (error) => {\r\n        console.error(\"Error getting user's location: \", error);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const fetchPlaces = async (lat, lng) => {\r\n    const URL = \"http://localhost:5000/places\"; // Adjust URL as needed\r\n    const radius = 500; // Static radius for fetching places, will be dynamic later\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${URL}?lat=${lat}&lng=${lng}&radius=${radius}`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      console.log(\"Places data:\", data);\r\n      // Handle the places data, store it in state, etc.\r\n    } catch (error) {\r\n      console.error(\"Error fetching places:\", error);\r\n    }\r\n  };\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={coordinates}\r\n      zoom={15} // Adjust zoom level as needed\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n    >\r\n      <Marker position={coordinates} title=\"User's Location\" />\r\n      {/* Render markers for places */}\r\n      {places.map((place, index) => (\r\n        <OverlayView\r\n          key={index}\r\n          position={{\r\n            lat: Number(place.geometry.location.lat),\r\n            lng: Number(place.geometry.location.lng),\r\n          }}\r\n          mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\r\n          getPixelPositionOffset={(offsetWidth, offsetHeight) =>\r\n            getPixelPositionOffset(offsetWidth, offsetHeight, {\r\n              x: -30,\r\n              y: -15,\r\n            })\r\n          }\r\n        >\r\n          <div\r\n            style={{\r\n              background: `#203254`,\r\n              padding: `7px 12px`,\r\n              fontSize: \"11px\",\r\n              color: `white`,\r\n              borderRadius: \"4px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              width: \"max-content\",\r\n            }}\r\n          >\r\n            <RestaurantIcon style={{ marginRight: 4 }} />\r\n            <span>{place.rating}</span>\r\n          </div>\r\n        </OverlayView>\r\n      ))}\r\n    </GoogleMap>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default React.memo(Map);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}