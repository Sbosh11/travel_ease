{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sibongile\\\\Documents\\\\sibongile\\\\2024\\\\projects\\\\portfolio\\\\APIs\\\\travel_ease\\\\src\\\\components\\\\Map\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow, OverlayView } from \"@react-google-maps/api\";\nimport { Star, Restaurant } from \"@mui/icons-material\";\nimport { Paper, Typography, useMediaQuery } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  height: \"70vh\",\n  width: \"100%\"\n};\nconst StyledPaper = styled(Paper)(() => ({\n  padding: \"10px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  width: \"max-content\" // Set width to max-content\n}));\n_c = StyledPaper;\nconst MarkerContainer = styled(\"div\")(() => ({\n  padding: \"10px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  width: \"100px\"\n}));\nfunction Map({\n  setCoordinates,\n  setBounds,\n  coordinates,\n  places\n}) {\n  _s();\n  const isDesktop = useMediaQuery(\"(min-width:600px)\");\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyBCL1EwLHgn8s3qXIk-rTVtr3DW3P8ZHR4\" // Replace with your API key\n  });\n  const [map, setMap] = useState(null);\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const onLoad = useCallback(map => {\n    setMap(map);\n  }, []);\n  const onUnmount = useCallback(() => {\n    setMap(null);\n  }, []);\n  const handleBoundsChanged = useCallback(() => {\n    if (map) {\n      const bounds = map.getBounds();\n      if (bounds) {\n        const ne = bounds.getNorthEast();\n        const sw = bounds.getSouthWest();\n        const newBounds = {\n          ne: {\n            lat: ne.lat(),\n            lng: ne.lng()\n          },\n          sw: {\n            lat: sw.lat(),\n            lng: sw.lng()\n          }\n        };\n        setBounds(prevBounds => {\n          if (JSON.stringify(prevBounds) !== JSON.stringify(newBounds)) {\n            return newBounds;\n          }\n          return prevBounds;\n        });\n      }\n    }\n  }, [map, setBounds]);\n  const handleCenterChanged = useCallback(() => {\n    if (map) {\n      const newCenter = map.getCenter();\n      if (newCenter) {\n        const newCoordinates = {\n          lat: newCenter.lat(),\n          lng: newCenter.lng()\n        };\n        setCoordinates(prevCoordinates => {\n          if (JSON.stringify(prevCoordinates) !== JSON.stringify(newCoordinates)) {\n            return newCoordinates;\n          }\n          return prevCoordinates;\n        });\n      }\n    }\n  }, [map, setCoordinates]);\n  useEffect(() => {\n    if (map) {\n      handleBoundsChanged();\n      handleCenterChanged();\n    }\n  }, [map, handleBoundsChanged, handleCenterChanged]);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: coordinates,\n    zoom: 15,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    onCenterChanged: handleCenterChanged,\n    onBoundsChanged: handleBoundsChanged,\n    children: [places === null || places === void 0 ? void 0 : places.map((place, i) => /*#__PURE__*/_jsxDEV(OverlayView, {\n      position: {\n        lat: Number(place.latitude),\n        lng: Number(place.longitude)\n      },\n      mapPaneName: OverlayView.OVERLAY_MOUSE_TARGET,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        display: \"flex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 12\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)), selectedPlace && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: Number(selectedPlace.latitude),\n        lng: Number(selectedPlace.longitude)\n      },\n      onCloseClick: () => setSelectedPlace(null),\n      children: /*#__PURE__*/_jsxDEV(StyledPaper, {\n        elevation: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedPlace.photo ? selectedPlace.photo.images.large.url : \"/chairs-cutlery-fork.webp\",\n          alt: selectedPlace.name,\n          style: {\n            width: \"auto\",\n            height: \"100px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          gutterBottom: true,\n          children: selectedPlace.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          display: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            children: selectedPlace.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Star, {\n            style: {\n              color: \"gold\",\n              marginLeft: 5\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Restaurant, {\n            style: {\n              marginLeft: 5\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: coordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Map, \"aK/dyirtRxaOxzoYq/jLx+gfa+g=\", false, function () {\n  return [useMediaQuery, useJsApiLoader];\n});\n_c2 = Map;\nexport default _c3 = /*#__PURE__*/React.memo(Map);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledPaper\");\n$RefreshReg$(_c2, \"Map\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","GoogleMap","useJsApiLoader","Marker","InfoWindow","OverlayView","Star","Restaurant","Paper","Typography","useMediaQuery","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","height","width","StyledPaper","padding","display","flexDirection","justifyContent","_c","MarkerContainer","Map","setCoordinates","setBounds","coordinates","places","_s","isDesktop","isLoaded","id","googleMapsApiKey","map","setMap","selectedPlace","setSelectedPlace","onLoad","onUnmount","handleBoundsChanged","bounds","getBounds","ne","getNorthEast","sw","getSouthWest","newBounds","lat","lng","prevBounds","JSON","stringify","handleCenterChanged","newCenter","getCenter","newCoordinates","prevCoordinates","mapContainerStyle","center","zoom","onCenterChanged","onBoundsChanged","children","place","i","position","Number","latitude","longitude","mapPaneName","OVERLAY_MOUSE_TARGET","fileName","_jsxFileName","lineNumber","columnNumber","onCloseClick","elevation","src","photo","images","large","url","alt","name","style","variant","gutterBottom","rating","color","marginLeft","_c2","_c3","memo","$RefreshReg$"],"sources":["C:/Users/Sibongile/Documents/sibongile/2024/projects/portfolio/APIs/travel_ease/src/components/Map/Map.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useJsApiLoader,\r\n  Marker,\r\n  InfoWindow,\r\n  OverlayView,\r\n} from \"@react-google-maps/api\";\r\nimport { Star, Restaurant } from \"@mui/icons-material\";\r\nimport { Paper, Typography, useMediaQuery } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst containerStyle = {\r\n  height: \"70vh\",\r\n  width: \"100%\",\r\n};\r\n\r\nconst StyledPaper = styled(Paper)(() => ({\r\n  padding: \"10px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  width: \"max-content\", // Set width to max-content\r\n}));\r\n\r\nconst MarkerContainer = styled(\"div\")(() => ({\r\n  padding: \"10px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  width: \"100px\",\r\n}));\r\n\r\nfunction Map({ setCoordinates, setBounds, coordinates, places }) {\r\n  const isDesktop = useMediaQuery(\"(min-width:600px)\");\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: \"AIzaSyBCL1EwLHgn8s3qXIk-rTVtr3DW3P8ZHR4\", // Replace with your API key\r\n  });\r\n\r\n  const [map, setMap] = useState(null);\r\n  const [selectedPlace, setSelectedPlace] = useState(null);\r\n\r\n  const onLoad = useCallback((map) => {\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = useCallback(() => {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  const handleBoundsChanged = useCallback(() => {\r\n    if (map) {\r\n      const bounds = map.getBounds();\r\n      if (bounds) {\r\n        const ne = bounds.getNorthEast();\r\n        const sw = bounds.getSouthWest();\r\n        const newBounds = {\r\n          ne: { lat: ne.lat(), lng: ne.lng() },\r\n          sw: { lat: sw.lat(), lng: sw.lng() },\r\n        };\r\n        setBounds((prevBounds) => {\r\n          if (JSON.stringify(prevBounds) !== JSON.stringify(newBounds)) {\r\n            return newBounds;\r\n          }\r\n          return prevBounds;\r\n        });\r\n      }\r\n    }\r\n  }, [map, setBounds]);\r\n\r\n  const handleCenterChanged = useCallback(() => {\r\n    if (map) {\r\n      const newCenter = map.getCenter();\r\n      if (newCenter) {\r\n        const newCoordinates = { lat: newCenter.lat(), lng: newCenter.lng() };\r\n        setCoordinates((prevCoordinates) => {\r\n          if (\r\n            JSON.stringify(prevCoordinates) !== JSON.stringify(newCoordinates)\r\n          ) {\r\n            return newCoordinates;\r\n          }\r\n          return prevCoordinates;\r\n        });\r\n      }\r\n    }\r\n  }, [map, setCoordinates]);\r\n\r\n  useEffect(() => {\r\n    if (map) {\r\n      handleBoundsChanged();\r\n      handleCenterChanged();\r\n    }\r\n  }, [map, handleBoundsChanged, handleCenterChanged]);\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={coordinates}\r\n      zoom={15}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n      onCenterChanged={handleCenterChanged}\r\n      onBoundsChanged={handleBoundsChanged}\r\n    >\r\n      {places?.map((place, i) => (\r\n        <OverlayView\r\n          key={i}\r\n          position={{\r\n            lat: Number(place.latitude),\r\n            lng: Number(place.longitude),\r\n          }}\r\n          mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\r\n        >\r\n           <Typography display=\"flex\">\r\n            \r\n           </Typography>\r\n          \r\n        </OverlayView>\r\n      ))}\r\n      {selectedPlace && (\r\n        <InfoWindow\r\n          position={{\r\n            lat: Number(selectedPlace.latitude),\r\n            lng: Number(selectedPlace.longitude),\r\n          }}\r\n          onCloseClick={() => setSelectedPlace(null)}\r\n        >\r\n          <StyledPaper elevation={3}>\r\n            <img\r\n              src={\r\n                selectedPlace.photo\r\n                  ? selectedPlace.photo.images.large.url\r\n                  : \"/chairs-cutlery-fork.webp\"\r\n              }\r\n              alt={selectedPlace.name}\r\n              style={{ width: \"auto\", height: \"100px\" }}\r\n            />\r\n            <Typography variant=\"subtitle2\" gutterBottom>\r\n              {selectedPlace.name}\r\n            </Typography>\r\n            <Typography display=\"flex\">\r\n              <Typography gutterBottom variant=\"h5\">\r\n                {selectedPlace.rating}\r\n              </Typography>\r\n              <Star style={{ color: \"gold\", marginLeft: 5 }} />\r\n              <Restaurant style={{ marginLeft: 5 }} />\r\n            </Typography>\r\n          </StyledPaper>\r\n        </InfoWindow>\r\n      )}\r\n      <Marker position={coordinates} />\r\n    </GoogleMap>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default React.memo(Map);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}