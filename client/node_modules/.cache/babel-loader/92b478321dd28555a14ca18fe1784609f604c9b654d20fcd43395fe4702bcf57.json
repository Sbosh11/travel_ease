{"ast":null,"code":"import axios from \"axios\";\nconst URL = \"https://travel-advisor.p.rapidapi.com/restaurants/list-in-boundary\";\nexport const getPlacesDetails = async (sw, ne) => {\n  const options = {\n    method: \"GET\",\n    url: URL,\n    params: {\n      bl_latitude: sw.lat,\n      tr_latitude: ne.lat,\n      bl_longitude: sw.lng,\n      tr_longitude: ne.lng,\n      /* bl_latitude: '11.847676',\r\n      tr_latitude: '12.838442',\r\n      bl_longitude: '109.095887',\r\n      tr_longitude: '109.149359',\r\n      restaurant_tagcategory_standalone: '10591',\r\n      restaurant_tagcategory: '10591',*/\n      limit: \"10\",\n      currency: \"ZAR\",\n      open_now: \"false\",\n      lunit: \"km\",\n      lang: \"en_US\"\n    },\n    headers: {\n      \"x-rapidapi-key\": \"fb4d1df22dmsh8c894fa1e543168p186030jsn6d7e1d50d732\",\n      \"x-rapidapi-host\": \"travel-advisor.p.rapidapi.com\",\n      \"Content-Type\": \"application/json\",\n      \"X-RapidAPI-Mock-Response\": \"200\"\n    }\n  };\n  try {\n    const response = await axios.request(options);\n    console.log(\"Full API Response:\", response);\n    const {\n      data\n    } = response.data;\n    console.log(\"Data from API:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching data from API:\", error);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","URL","getPlacesDetails","sw","ne","options","method","url","params","bl_latitude","lat","tr_latitude","bl_longitude","lng","tr_longitude","limit","currency","open_now","lunit","lang","headers","response","request","console","log","data","error"],"sources":["C:/Users/Sibongile/Documents/sibongile/2024/projects/portfolio/APIs/travel_ease/src/API/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst URL =\r\n  \"https://travel-advisor.p.rapidapi.com/restaurants/list-in-boundary\";\r\n\r\nexport const getPlacesDetails = async (sw, ne) => {\r\n  const options = {\r\n    method: \"GET\",\r\n    url: URL,\r\n    params: {\r\n      bl_latitude: sw.lat,\r\n      tr_latitude: ne.lat,\r\n      bl_longitude: sw.lng,\r\n      tr_longitude: ne.lng,\r\n      /* bl_latitude: '11.847676',\r\n    tr_latitude: '12.838442',\r\n    bl_longitude: '109.095887',\r\n    tr_longitude: '109.149359',\r\n    restaurant_tagcategory_standalone: '10591',\r\n    restaurant_tagcategory: '10591',*/\r\n      limit: \"10\",\r\n      currency: \"ZAR\",\r\n      open_now: \"false\",\r\n      lunit: \"km\",\r\n      lang: \"en_US\",\r\n    },\r\n    headers: {\r\n      \"x-rapidapi-key\": \"fb4d1df22dmsh8c894fa1e543168p186030jsn6d7e1d50d732\",\r\n      \"x-rapidapi-host\": \"travel-advisor.p.rapidapi.com\",\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-RapidAPI-Mock-Response\": \"200\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const response = await axios.request(options);\r\n    console.log(\"Full API Response:\", response);\r\n    const { data } = response.data;\r\n    console.log(\"Data from API:\", data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching data from API:\", error);\r\n    return null;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GACP,oEAAoE;AAEtE,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOC,EAAE,EAAEC,EAAE,KAAK;EAChD,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,KAAK;IACbC,GAAG,EAAEN,GAAG;IACRO,MAAM,EAAE;MACNC,WAAW,EAAEN,EAAE,CAACO,GAAG;MACnBC,WAAW,EAAEP,EAAE,CAACM,GAAG;MACnBE,YAAY,EAAET,EAAE,CAACU,GAAG;MACpBC,YAAY,EAAEV,EAAE,CAACS,GAAG;MACpB;AACN;AACA;AACA;AACA;AACA;MACME,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,OAAO;MACjBC,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE;IACR,CAAC;IACDC,OAAO,EAAE;MACP,gBAAgB,EAAE,oDAAoD;MACtE,iBAAiB,EAAE,+BAA+B;MAClD,cAAc,EAAE,kBAAkB;MAClC,0BAA0B,EAAE;IAC9B;EACF,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,OAAO,CAACjB,OAAO,CAAC;IAC7CkB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,QAAQ,CAAC;IAC3C,MAAM;MAAEI;IAAK,CAAC,GAAGJ,QAAQ,CAACI,IAAI;IAC9BF,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,IAAI,CAAC;IACnC,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}