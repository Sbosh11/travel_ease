{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sibongile\\\\Documents\\\\sibongile\\\\2024\\\\projects\\\\portfolio\\\\APIs\\\\travel_ease\\\\src\\\\components\\\\Map\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport { GoogleMap, useJsApiLoader, InfoWindow, OverlayView } from \"@react-google-maps/api\";\nimport { Star, Restaurant, PersonPinCircleRounded } from \"@mui/icons-material\";\nimport { Paper, Typography, useMediaQuery } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport { getPlacesDetails } from \"../../API/index\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  height: \"70vh\",\n  width: \"100%\"\n};\nconst StyledPaper = styled(Paper)(() => ({\n  padding: \"10px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  width: \"max-content\" // Set width to max-content\n}));\nconst MarkerContainer = styled(\"div\")(() => ({\n  padding: \"10px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  width: \"100px\"\n}));\n_c = MarkerContainer;\nconst mapStyles = [/* Your map styles here */];\nfunction Map({\n  setCoordinates,\n  setBounds,\n  coordinates,\n  places\n}) {\n  _s();\n  const isDesktop = useMediaQuery(\"(min-width:600px)\");\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"YOUR_GOOGLE_MAPS_API_KEY\" // Replace with your API key\n  });\n  const [map, setMap] = useState(null);\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const onLoad = useCallback(map => {\n    setMap(map);\n  }, []);\n  const onUnmount = useCallback(() => {\n    setMap(null);\n  }, []);\n  const handleBoundsChanged = useCallback(() => {\n    if (map) {\n      const bounds = map.getBounds();\n      if (bounds) {\n        const ne = bounds.getNorthEast();\n        const sw = bounds.getSouthWest();\n        const newBounds = {\n          ne: {\n            lat: ne.lat(),\n            lng: ne.lng()\n          },\n          sw: {\n            lat: sw.lat(),\n            lng: sw.lng()\n          }\n        };\n        setBounds(newBounds);\n      }\n    }\n  }, [map, setBounds]);\n  const handleCenterChanged = useCallback(() => {\n    if (map) {\n      const newCenter = map.getCenter();\n      if (newCenter) {\n        setCoordinates({\n          lat: newCenter.lat(),\n          lng: newCenter.lng()\n        });\n      }\n    }\n  }, [map, setCoordinates]);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: coordinates,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    onBoundsChanged: handleBoundsChanged,\n    onCenterChanged: handleCenterChanged,\n    options: {\n      styles: mapStyles\n    },\n    children: places.map((place, i) => /*#__PURE__*/_jsxDEV(OverlayView, {\n      position: {\n        lat: place.geometry.location.lat,\n        lng: place.geometry.location.lng\n      },\n      mapPaneName: OverlayView.OVERLAY_MOUSE_TARGET,\n      children: /*#__PURE__*/_jsxDEV(MarkerContainer, {\n        children: /*#__PURE__*/_jsxDEV(Restaurant, {\n          color: \"primary\",\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Map, \"LZ/pk67+ksFutJuI3CWddFDtD9Q=\", false, function () {\n  return [useMediaQuery, useJsApiLoader];\n});\n_c2 = Map;\nexport default Map;\nvar _c, _c2;\n$RefreshReg$(_c, \"MarkerContainer\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"names":["React","useState","useCallback","GoogleMap","useJsApiLoader","InfoWindow","OverlayView","Star","Restaurant","PersonPinCircleRounded","Paper","Typography","useMediaQuery","styled","getPlacesDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","height","width","StyledPaper","padding","display","flexDirection","justifyContent","MarkerContainer","_c","mapStyles","Map","setCoordinates","setBounds","coordinates","places","_s","isDesktop","isLoaded","id","googleMapsApiKey","map","setMap","selectedPlace","setSelectedPlace","onLoad","onUnmount","handleBoundsChanged","bounds","getBounds","ne","getNorthEast","sw","getSouthWest","newBounds","lat","lng","handleCenterChanged","newCenter","getCenter","mapContainerStyle","center","zoom","onBoundsChanged","onCenterChanged","options","styles","children","place","i","position","geometry","location","mapPaneName","OVERLAY_MOUSE_TARGET","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/Sibongile/Documents/sibongile/2024/projects/portfolio/APIs/travel_ease/src/components/Map/Map.jsx"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useJsApiLoader,\r\n  InfoWindow,\r\n  OverlayView,\r\n} from \"@react-google-maps/api\";\r\nimport { Star, Restaurant, PersonPinCircleRounded } from \"@mui/icons-material\";\r\nimport { Paper, Typography, useMediaQuery } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { getPlacesDetails } from \"../../API/index\";\r\n\r\nconst containerStyle = {\r\n  height: \"70vh\",\r\n  width: \"100%\",\r\n};\r\n\r\nconst StyledPaper = styled(Paper)(() => ({\r\n  padding: \"10px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  width: \"max-content\", // Set width to max-content\r\n}));\r\n\r\nconst MarkerContainer = styled(\"div\")(() => ({\r\n  padding: \"10px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  width: \"100px\",\r\n}));\r\n\r\nconst mapStyles = [/* Your map styles here */];\r\n\r\nfunction Map({ setCoordinates, setBounds, coordinates, places }) {\r\n  const isDesktop = useMediaQuery(\"(min-width:600px)\");\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: \"YOUR_GOOGLE_MAPS_API_KEY\", // Replace with your API key\r\n  });\r\n\r\n  const [map, setMap] = useState(null);\r\n  const [selectedPlace, setSelectedPlace] = useState(null);\r\n\r\n  const onLoad = useCallback((map) => {\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = useCallback(() => {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  const handleBoundsChanged = useCallback(() => {\r\n    if (map) {\r\n      const bounds = map.getBounds();\r\n      if (bounds) {\r\n        const ne = bounds.getNorthEast();\r\n        const sw = bounds.getSouthWest();\r\n        const newBounds = {\r\n          ne: { lat: ne.lat(), lng: ne.lng() },\r\n          sw: { lat: sw.lat(), lng: sw.lng() },\r\n        };\r\n        setBounds(newBounds);\r\n      }\r\n    }\r\n  }, [map, setBounds]);\r\n\r\n  const handleCenterChanged = useCallback(() => {\r\n    if (map) {\r\n      const newCenter = map.getCenter();\r\n      if (newCenter) {\r\n        setCoordinates({ lat: newCenter.lat(), lng: newCenter.lng() });\r\n      }\r\n    }\r\n  }, [map, setCoordinates]);\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={coordinates}\r\n      zoom={10}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n      onBoundsChanged={handleBoundsChanged}\r\n      onCenterChanged={handleCenterChanged}\r\n      options={{ styles: mapStyles }}\r\n    >\r\n      {places.map((place, i) => (\r\n        <OverlayView\r\n          key={i}\r\n          position={{ lat: place.geometry.location.lat, lng: place.geometry.location.lng }}\r\n          mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\r\n        >\r\n          <MarkerContainer>\r\n            <Restaurant color=\"primary\" fontSize=\"large\" />\r\n          </MarkerContainer>\r\n        </OverlayView>\r\n      ))}\r\n      {/* Add other map components such as InfoWindow if needed */}\r\n    </GoogleMap>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}