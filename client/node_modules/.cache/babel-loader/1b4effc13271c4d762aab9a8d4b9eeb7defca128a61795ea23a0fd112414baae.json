{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sibongile\\\\Documents\\\\sibongile\\\\2024\\\\projects\\\\portfolio\\\\APIs\\\\travel_ease\\\\client\\\\src\\\\components\\\\Map\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { GoogleMap, useJsApiLoader, OverlayView } from \"@react-google-maps/api\";\nimport RestaurantIcon from \"@mui/icons-material/Restaurant\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  height: \"70vh\",\n  // Adjust as needed\n  width: \"100%\"\n};\nconst getPixelPositionOffset = (offsetWidth, offsetHeight, labelAnchor) => {\n  return {\n    x: offsetWidth + labelAnchor.x,\n    y: offsetHeight + labelAnchor.y\n  };\n};\nfunction Map({\n  initialCenter,\n  places\n}) {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyBCL1EwLHgn8s3qXIk-rTVtr3DW3P8ZHR4\" // Replace with your Google Maps API key\n  });\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: initialCenter // Center map on initial coordinates\n    ,\n    zoom: 15 // Adjust zoom level as needed\n    ,\n    children: places.map((place, index) => /*#__PURE__*/_jsxDEV(OverlayView, {\n      position: {\n        lat: place.geometry.location.lat,\n        lng: place.geometry.location.lng\n      },\n      mapPaneName: OverlayView.OVERLAY_MOUSE_TARGET,\n      getPixelPositionOffset: (offsetWidth, offsetHeight) => getPixelPositionOffset(offsetWidth, offsetHeight, {\n        x: -30,\n        y: -15\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: `#203254`,\n          padding: `7px 12px`,\n          fontSize: \"11px\",\n          color: `white`,\n          borderRadius: \"4px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          width: \"max-content\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(RestaurantIcon, {\n          style: {\n            marginRight: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: place.rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Map, \"mLN67oIZdYDfCjxG2Fcvbwz7Mfk=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\nvar _c, _c2;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","GoogleMap","useJsApiLoader","OverlayView","RestaurantIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","height","width","getPixelPositionOffset","offsetWidth","offsetHeight","labelAnchor","x","y","Map","initialCenter","places","_s","isLoaded","id","googleMapsApiKey","mapContainerStyle","center","zoom","children","map","place","index","position","lat","geometry","location","lng","mapPaneName","OVERLAY_MOUSE_TARGET","style","background","padding","fontSize","color","borderRadius","display","alignItems","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","rating","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/Sibongile/Documents/sibongile/2024/projects/portfolio/APIs/travel_ease/client/src/components/Map/Map.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { GoogleMap, useJsApiLoader, OverlayView } from \"@react-google-maps/api\";\r\nimport RestaurantIcon from \"@mui/icons-material/Restaurant\";\r\n\r\nconst containerStyle = {\r\n  height: \"70vh\", // Adjust as needed\r\n  width: \"100%\",\r\n};\r\n\r\nconst getPixelPositionOffset = (offsetWidth, offsetHeight, labelAnchor) => {\r\n  return {\r\n    x: offsetWidth + labelAnchor.x,\r\n    y: offsetHeight + labelAnchor.y,\r\n  };\r\n};\r\n\r\nfunction Map({ initialCenter, places }) {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: \"AIzaSyBCL1EwLHgn8s3qXIk-rTVtr3DW3P8ZHR4\", // Replace with your Google Maps API key\r\n  });\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={initialCenter} // Center map on initial coordinates\r\n      zoom={15} // Adjust zoom level as needed\r\n    >\r\n      {/* Render markers for places */}\r\n      {places.map((place, index) => (\r\n        <OverlayView\r\n          key={index}\r\n          position={{\r\n            lat: place.geometry.location.lat,\r\n            lng: place.geometry.location.lng,\r\n          }}\r\n          mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\r\n          getPixelPositionOffset={(offsetWidth, offsetHeight) =>\r\n            getPixelPositionOffset(offsetWidth, offsetHeight, {\r\n              x: -30,\r\n              y: -15,\r\n            })\r\n          }\r\n        >\r\n          <div\r\n            style={{\r\n              background: `#203254`,\r\n              padding: `7px 12px`,\r\n              fontSize: \"11px\",\r\n              color: `white`,\r\n              borderRadius: \"4px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              width: \"max-content\",\r\n            }}\r\n          >\r\n            <RestaurantIcon style={{ marginRight: 4 }} />\r\n            <span>{place.rating}</span>\r\n          </div>\r\n        </OverlayView>\r\n      ))}\r\n    </GoogleMap>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default React.memo(Map);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}