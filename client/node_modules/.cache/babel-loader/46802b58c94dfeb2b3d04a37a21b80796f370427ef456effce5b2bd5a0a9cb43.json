{"ast":null,"code":"const express = require(\"express\");\nconst cors = require(\"cors\");\nconst fetch = require(\"node-fetch\");\nconst app = express();\nconst PORT = process.env.PORT || 5000;\napp.use(cors());\n\n// Endpoint to proxy the Google Places API request\napp.get(\"/places\", async (req, res) => {\n  const {\n    query,\n    location,\n    radius,\n    key\n  } = req.query;\n  const apiUrl = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=${query}&location=${location}&radius=${radius}&key=${key}`;\n  try {\n    const response = await fetch(apiUrl);\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const data = await response.json();\n    res.json(data);\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    res.status(500).json({\n      error: \"Failed to fetch data from Google Places API\"\n    });\n  }\n});\napp.listen(PORT, () => {\n  console.log(`Server is running on http://localhost:${PORT}`);\n});","map":{"version":3,"names":["express","require","cors","fetch","app","PORT","process","env","use","get","req","res","query","location","radius","key","apiUrl","response","ok","Error","status","data","json","error","console","listen","log"],"sources":["C:/Users/Sibongile/Documents/sibongile/2024/projects/portfolio/APIs/travel_ease/client/src/App.js"],"sourcesContent":["const express = require(\"express\");\nconst cors = require(\"cors\");\nconst fetch = require(\"node-fetch\");\n\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\napp.use(cors());\n\n// Endpoint to proxy the Google Places API request\napp.get(\"/places\", async (req, res) => {\n  const { query, location, radius, key } = req.query;\n  const apiUrl = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=${query}&location=${location}&radius=${radius}&key=${key}`;\n\n  try {\n    const response = await fetch(apiUrl);\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const data = await response.json();\n    res.json(data);\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    res.status(500).json({ error: \"Failed to fetch data from Google Places API\" });\n  }\n});\n\napp.listen(PORT, () => {\n  console.log(`Server is running on http://localhost:${PORT}`);\n});\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,KAAK,GAAGF,OAAO,CAAC,YAAY,CAAC;AAEnC,MAAMG,GAAG,GAAGJ,OAAO,CAAC,CAAC;AACrB,MAAMK,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AAErCD,GAAG,CAACI,GAAG,CAACN,IAAI,CAAC,CAAC,CAAC;;AAEf;AACAE,GAAG,CAACK,GAAG,CAAC,SAAS,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACrC,MAAM;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAI,CAAC,GAAGL,GAAG,CAACE,KAAK;EAClD,MAAMI,MAAM,GAAI,oEAAmEJ,KAAM,aAAYC,QAAS,WAAUC,MAAO,QAAOC,GAAI,EAAC;EAE3I,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMd,KAAK,CAACa,MAAM,CAAC;IACpC,IAAI,CAACC,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACG,MAAO,EAAC,CAAC;IAC3D;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCX,GAAG,CAACW,IAAI,CAACD,IAAI,CAAC;EAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5CZ,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACE,IAAI,CAAC;MAAEC,KAAK,EAAE;IAA8C,CAAC,CAAC;EAChF;AACF,CAAC,CAAC;AAEFnB,GAAG,CAACqB,MAAM,CAACpB,IAAI,EAAE,MAAM;EACrBmB,OAAO,CAACE,GAAG,CAAE,yCAAwCrB,IAAK,EAAC,CAAC;AAC9D,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}