{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sibongile\\\\Documents\\\\sibongile\\\\2024\\\\projects\\\\portfolio\\\\APIs\\\\travel_ease\\\\src\\\\components\\\\Map\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  height: \"70vh\",\n  width: \"100%\"\n};\nfunction Map({\n  setCoordinates,\n  setBounds,\n  coordinates,\n  places\n}) {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyBCL1EwLHgn8s3qXIk-rTVtr3DW3P8ZHR4\" // Replace with your actual API key\n  });\n  const [map, setMap] = useState(null);\n  const [mapBounds, setMapBounds] = useState(null);\n  const [mapCenter, setMapCenter] = useState(null);\n  const onLoad = useCallback(map => {\n    setMap(map);\n  }, []);\n  const onUnmount = useCallback(() => {\n    setMap(null);\n  }, []);\n  const handleBoundsChanged = () => {\n    if (map) {\n      const bounds = map.getBounds();\n      if (bounds) {\n        const ne = bounds.getNorthEast();\n        const sw = bounds.getSouthWest();\n        const newBounds = {\n          ne: {\n            lat: ne.lat(),\n            lng: ne.lng()\n          },\n          sw: {\n            lat: sw.lat(),\n            lng: sw.lng()\n          }\n        };\n        if (JSON.stringify(newBounds) !== JSON.stringify(mapBounds)) {\n          setMapBounds(newBounds);\n          setBounds(newBounds);\n          console.log(\"Boundsnew:\", newBounds);\n        }\n      }\n    }\n  };\n  const handleCenterChanged = () => {\n    if (map) {\n      const newCenter = map.getCenter();\n      if (newCenter) {\n        const newCoordinates = {\n          lat: newCenter.lat(),\n          lng: newCenter.lng()\n        };\n        if (JSON.stringify(newCoordinates) !== JSON.stringify(mapCenter)) {\n          setMapCenter(newCoordinates);\n          setCoordinates(newCoordinates);\n          console.log(\"Center:\", newCoordinates);\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    setBounds(mapBounds);\n  }, [mapBounds, setBounds]);\n  useEffect(() => {\n    setCoordinates(mapCenter);\n  }, [mapCenter, setCoordinates]);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: coordinates,\n    zoom: 15,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    onCenterChanged: handleCenterChanged,\n    onBoundsChanged: handleBoundsChanged,\n    onChildClick: '',\n    children: [places === null || places === void 0 ? void 0 : places.map(place => /*#__PURE__*/_jsxDEV(\"div\", {\n      lat: place.latit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 1\n    }, this)), /*#__PURE__*/_jsxDEV(Marker, {\n      position: coordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Map, \"a9+DEseeULdJ9IatbmlQ34vlcJ8=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\nvar _c, _c2;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","GoogleMap","useJsApiLoader","Marker","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","height","width","Map","setCoordinates","setBounds","coordinates","places","_s","isLoaded","id","googleMapsApiKey","map","setMap","mapBounds","setMapBounds","mapCenter","setMapCenter","onLoad","onUnmount","handleBoundsChanged","bounds","getBounds","ne","getNorthEast","sw","getSouthWest","newBounds","lat","lng","JSON","stringify","console","log","handleCenterChanged","newCenter","getCenter","newCoordinates","mapContainerStyle","center","zoom","onCenterChanged","onBoundsChanged","onChildClick","children","place","latit","fileName","_jsxFileName","lineNumber","columnNumber","position","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/Sibongile/Documents/sibongile/2024/projects/portfolio/APIs/travel_ease/src/components/Map/Map.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\r\n\r\nconst containerStyle = {\r\n  height: \"70vh\",\r\n  width: \"100%\",\r\n};\r\n\r\nfunction Map({ setCoordinates, setBounds, coordinates, places }) {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: \"AIzaSyBCL1EwLHgn8s3qXIk-rTVtr3DW3P8ZHR4\", // Replace with your actual API key\r\n  });\r\n\r\n  const [map, setMap] = useState(null);\r\n  const [mapBounds, setMapBounds] = useState(null);\r\n  const [mapCenter, setMapCenter] = useState(null);\r\n\r\n  const onLoad = useCallback((map) => {\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = useCallback(() => {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  const handleBoundsChanged = () => {\r\n    if (map) {\r\n      const bounds = map.getBounds();\r\n      if (bounds) {\r\n        const ne = bounds.getNorthEast();\r\n        const sw = bounds.getSouthWest();\r\n        const newBounds = {\r\n          ne: { lat: ne.lat(), lng: ne.lng() },\r\n          sw: { lat: sw.lat(), lng: sw.lng() },\r\n        };\r\n        if (JSON.stringify(newBounds) !== JSON.stringify(mapBounds)) {\r\n          setMapBounds(newBounds);\r\n          setBounds(newBounds);\r\n          console.log(\"Boundsnew:\", newBounds);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCenterChanged = () => {\r\n    if (map) {\r\n      const newCenter = map.getCenter();\r\n      if (newCenter) {\r\n        const newCoordinates = { lat: newCenter.lat(), lng: newCenter.lng() };\r\n        if (JSON.stringify(newCoordinates) !== JSON.stringify(mapCenter)) {\r\n          setMapCenter(newCoordinates);\r\n          setCoordinates(newCoordinates);\r\n          console.log(\"Center:\", newCoordinates);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setBounds(mapBounds);\r\n  }, [mapBounds, setBounds]);\r\n\r\n  useEffect(() => {\r\n    setCoordinates(mapCenter);\r\n  }, [mapCenter, setCoordinates]);\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={coordinates}\r\n      zoom={15}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n      onCenterChanged={handleCenterChanged}\r\n      onBoundsChanged={handleBoundsChanged}\r\n      onChildClick={''}\r\n    >\r\n      {places?.map((place)=> (\r\n<div\r\nlat={place.latit}\r\n></div>\r\n      ))}\r\n      <Marker position={coordinates} />\r\n    </GoogleMap>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default React.memo(Map);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}