{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sibongile\\\\Documents\\\\sibongile\\\\2024\\\\projects\\\\portfolio\\\\APIs\\\\travel_ease\\\\client\\\\src\\\\components\\\\Map\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport { GoogleMap, useJsApiLoader, OverlayView } from \"@react-google-maps/api\";\nimport { Restaurant } from \"@mui/icons-material\";\nimport { Box, Typography } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MarkerContainer = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  textAlign: \"center\",\n  background: \"white\",\n  border: \"1px solid #ccc\",\n  padding: \"5px\",\n  borderRadius: \"5px\",\n  cursor: \"pointer\"\n});\n_c = MarkerContainer;\nconst MarkerIcon = styled(Restaurant)({\n  fontSize: 24,\n  color: \"#FF6347\" // Customize the color of the icon\n});\n_c2 = MarkerIcon;\nconst Map = ({\n  setCoordinates,\n  setBounds,\n  coordinates,\n  places\n}) => {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyBCL1EwLHgn8s3qXIk-rTVtr3DW3P8ZHR4\" // Replace with your API key\n  });\n  const [map, setMap] = useState(null);\n  const prevBoundsRef = useRef(null);\n  const prevCenterRef = useRef(coordinates);\n  const onLoad = useCallback(map => {\n    setMap(map);\n  }, []);\n  const onUnmount = useCallback(() => {\n    setMap(null);\n  }, []);\n  const handleBoundsChanged = useCallback(() => {\n    if (map) {\n      const bounds = map.getBounds();\n      if (bounds) {\n        const ne = bounds.getNorthEast();\n        const sw = bounds.getSouthWest();\n        const newBounds = {\n          northeast: ne.toJSON(),\n          southwest: sw.toJSON()\n        };\n        if (JSON.stringify(newBounds) !== JSON.stringify(prevBoundsRef.current)) {\n          prevBoundsRef.current = newBounds;\n          setBounds(newBounds);\n        }\n      }\n    }\n  }, [map, setBounds]);\n  const handleCenterChanged = useCallback(() => {\n    if (map) {\n      const center = map.getCenter();\n      const newCenter = {\n        lat: center.lat(),\n        lng: center.lng()\n      };\n      if (JSON.stringify(newCenter) !== JSON.stringify(prevCenterRef.current)) {\n        prevCenterRef.current = newCenter;\n        setCoordinates(newCenter);\n      }\n    }\n  }, [map, setCoordinates]);\n  useEffect(() => {\n    if (map) {\n      handleBoundsChanged();\n      handleCenterChanged();\n    }\n  }, [map, handleBoundsChanged, handleCenterChanged]);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: {\n      height: \"70vh\",\n      width: \"100%\"\n    },\n    center: coordinates,\n    zoom: 15,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    onBoundsChanged: handleBoundsChanged,\n    onCenterChanged: handleCenterChanged,\n    children: [places.map((place, index) => /*#__PURE__*/_jsxDEV(OverlayView, {\n      position: {\n        lat: place.geometry.location.lat,\n        lng: place.geometry.location.lng\n      },\n      mapPaneName: OverlayView.OVERLAY_MOUSE_TARGET,\n      children: /*#__PURE__*/_jsxDEV(MarkerContainer, {\n        children: [/*#__PURE__*/_jsxDEV(MarkerIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: place.rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(OverlayView, {\n      position: coordinates,\n      mapPaneName: OverlayView.OVERLAY_MOUSE_TARGET,\n      children: /*#__PURE__*/_jsxDEV(MarkerContainer, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"You are here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Map, \"8SL+MhJe4dfGzFjxbDyvgDOKL/o=\", false, function () {\n  return [useJsApiLoader];\n});\n_c3 = Map;\nexport default React.memo;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MarkerContainer\");\n$RefreshReg$(_c2, \"MarkerIcon\");\n$RefreshReg$(_c3, \"Map\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useRef","GoogleMap","useJsApiLoader","OverlayView","Restaurant","Box","Typography","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","MarkerContainer","display","flexDirection","alignItems","textAlign","background","border","padding","borderRadius","cursor","_c","MarkerIcon","fontSize","color","_c2","Map","setCoordinates","setBounds","coordinates","places","_s","isLoaded","id","googleMapsApiKey","map","setMap","prevBoundsRef","prevCenterRef","onLoad","onUnmount","handleBoundsChanged","bounds","getBounds","ne","getNorthEast","sw","getSouthWest","newBounds","northeast","toJSON","southwest","JSON","stringify","current","handleCenterChanged","center","getCenter","newCenter","lat","lng","mapContainerStyle","height","width","zoom","onBoundsChanged","onCenterChanged","children","place","index","position","geometry","location","mapPaneName","OVERLAY_MOUSE_TARGET","fileName","_jsxFileName","lineNumber","columnNumber","variant","rating","_c3","memo","$RefreshReg$"],"sources":["C:/Users/Sibongile/Documents/sibongile/2024/projects/portfolio/APIs/travel_ease/client/src/components/Map/Map.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from \"react\";\r\nimport { GoogleMap, useJsApiLoader, OverlayView } from \"@react-google-maps/api\";\r\nimport { Restaurant } from \"@mui/icons-material\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nconst MarkerContainer = styled(\"div\")({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  textAlign: \"center\",\r\n  background: \"white\",\r\n  border: \"1px solid #ccc\",\r\n  padding: \"5px\",\r\n  borderRadius: \"5px\",\r\n  cursor: \"pointer\",\r\n});\r\n\r\nconst MarkerIcon = styled(Restaurant)({\r\n  fontSize: 24,\r\n  color: \"#FF6347\", // Customize the color of the icon\r\n});\r\n\r\nconst Map = ({ setCoordinates, setBounds, coordinates, places }) => {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: \"AIzaSyBCL1EwLHgn8s3qXIk-rTVtr3DW3P8ZHR4\", // Replace with your API key\r\n  });\r\n\r\n  const [map, setMap] = useState(null);\r\n  const prevBoundsRef = useRef(null);\r\n  const prevCenterRef = useRef(coordinates);\r\n\r\n  const onLoad = useCallback((map) => {\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = useCallback(() => {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  const handleBoundsChanged = useCallback(() => {\r\n    if (map) {\r\n      const bounds = map.getBounds();\r\n      if (bounds) {\r\n        const ne = bounds.getNorthEast();\r\n        const sw = bounds.getSouthWest();\r\n        const newBounds = { northeast: ne.toJSON(), southwest: sw.toJSON() };\r\n\r\n        if (\r\n          JSON.stringify(newBounds) !== JSON.stringify(prevBoundsRef.current)\r\n        ) {\r\n          prevBoundsRef.current = newBounds;\r\n          setBounds(newBounds);\r\n        }\r\n      }\r\n    }\r\n  }, [map, setBounds]);\r\n\r\n  const handleCenterChanged = useCallback(() => {\r\n    if (map) {\r\n      const center = map.getCenter();\r\n      const newCenter = { lat: center.lat(), lng: center.lng() };\r\n\r\n      if (JSON.stringify(newCenter) !== JSON.stringify(prevCenterRef.current)) {\r\n        prevCenterRef.current = newCenter;\r\n        setCoordinates(newCenter);\r\n      }\r\n    }\r\n  }, [map, setCoordinates]);\r\n\r\n  useEffect(() => {\r\n    if (map) {\r\n      handleBoundsChanged();\r\n      handleCenterChanged();\r\n    }\r\n  }, [map, handleBoundsChanged, handleCenterChanged]);\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      mapContainerStyle={{ height: \"70vh\", width: \"100%\" }}\r\n      center={coordinates}\r\n      zoom={15}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n      onBoundsChanged={handleBoundsChanged}\r\n      onCenterChanged={handleCenterChanged}\r\n    >\r\n      {places.map((place, index) => (\r\n        <OverlayView\r\n          key={index}\r\n          position={{\r\n            lat: place.geometry.location.lat,\r\n            lng: place.geometry.location.lng,\r\n          }}\r\n          mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\r\n        >\r\n          <MarkerContainer>\r\n            <MarkerIcon />\r\n            <Typography variant=\"body2\">{place.rating}</Typography>\r\n          </MarkerContainer>\r\n        </OverlayView>\r\n      ))}\r\n      <OverlayView\r\n        position={coordinates}\r\n        mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\r\n      >\r\n        <MarkerContainer>\r\n          <Typography variant=\"body2\">You are here</Typography>\r\n        </MarkerContainer>\r\n      </OverlayView>\r\n    </GoogleMap>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport default React.memo"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}